//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chat.Data.Resources.ChatUser {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Sql {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Sql() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Chat.Data.Resources.ChatUser.Sql", typeof(Sql).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [chat].[ChatXUser]
        ///(
        ///    [ChatId]
        ///	,[UserId]
        ///) 
        ///OUTPUT Inserted.Id
        ///VALUES 
        ///(
        ///    @ChatId
        ///    ,@UserId
        ///)
        ///.
        /// </summary>
        public static string Create {
            get {
                return ResourceManager.GetString("Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(1)
        ///FROM 
        ///	[chat].[ChatXUser]
        ///WHERE 
        ///	[ChatId] = @ChatId AND 
        ///	[UserId] = @UserId.
        /// </summary>
        public static string Exists {
            get {
                return ResourceManager.GetString("Exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	[Id]
        ///	,[ChatId]
        ///	,[UserId]
        ///FROM 
        ///	[chat].[ChatXUser]
        ///WHERE 
        ///	[ChatId] = @ChatId AND 
        ///	[UserId] = @UserId.
        /// </summary>
        public static string Get {
            get {
                return ResourceManager.GetString("Get", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    [Id]
        ///	,[ChatId]
        ///	,[UserId]
        ///FROM 
        ///	[chat].[ChatXUser].
        /// </summary>
        public static string GetAll {
            get {
                return ResourceManager.GetString("GetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    UU.[Id]
        ///    ,UU.[FirstName]
        ///    ,UU.[LastName]
        ///    ,UU.[Avatar]
        ///FROM [user].[User] UU (NOLOCK)
        ///INNER JOIN [chat].[ChatXUser] CCU (NOLOCK)
        ///ON UU.[Id] = CCU.[UserId]
        ///WHERE CCU.[ChatId] = @ChatId.
        /// </summary>
        public static string GetChatUsers {
            get {
                return ResourceManager.GetString("GetChatUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    UC.[Id]
        ///    ,UC.[Name]
        ///FROM [chat].[Chat] UC (NOLOCK)
        ///INNER JOIN [chat].[ChatXUser] CCU (NOLOCK)
        ///ON UC.[Id] = CCU.[ChatId]
        ///WHERE CCU.[UserId] = @UserId.
        /// </summary>
        public static string GetUserChats {
            get {
                return ResourceManager.GetString("GetUserChats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM 
        ///	[chat].[ChatXUser]
        ///WHERE 
        ///	[ChatId] = @ChatId AND 
        ///	[UserId] = @UserId
        ///SELECT @@ROWCOUNT.
        /// </summary>
        public static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --DECLARE @Id INT = NULL
        ///--DECLARE @ChatId INT = NULL
        ///--DECLARE @UserId INT = NULL
        ///
        ///--DECLARE @Page INT = 1
        ///--DECLARE @PageSize INT = 10
        ///--DECLARE @SortBy NVARCHAR(MAX) = NULL
        ///
        ///--SELECT 
        ///--    [Id]
        ///--	,[ChatId]
        ///--	,[UserId]
        ///--	,COUNT(*) OVER() TotalRows
        ///--FROM 
        ///--    [employee].[Employee] (NOLOCK)
        ///--WHERE
        ///--    ( @Id IS NULL OR [Id] = @Id ) AND 
        ///--    ( @ChatId IS NULL OR [ChatId] = @ChatId ) AND 
        ///--    ( @UserId IS NULL OR [UserId] = @UserId  )
        ///--ORDER BY 
        ///--	@SortBy
        ///--OFFSET ( @Page - [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Search {
            get {
                return ResourceManager.GetString("Search", resourceCulture);
            }
        }
    }
}
